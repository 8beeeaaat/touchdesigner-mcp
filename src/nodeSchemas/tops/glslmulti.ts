import { z } from "zod";
import { createTOPSchema } from "./utils.js";

const glslmulti = createTOPSchema({
	pageindex: z.number().optional(),
	glslversion: z.string().optional(),
	mode: z.string().optional(),
	predat: z.any().optional(),
	vertexdat: z.any().optional(),
	pixeldat: z.string().optional(),
	computedat: z.string().optional(),
	loaduniformnames: z.boolean().optional(),
	autodispatchsize: z.boolean().optional(),
	dispatchsizex: z.number().optional(),
	dispatchsizey: z.number().optional(),
	dispatchsizez: z.number().optional(),
	outputaccess: z.string().optional(),
	type: z.string().optional(),
	depth: z.string().optional(),
	customdepth: z.number().optional(),
	clearoutputs: z.boolean().optional(),
	clearvaluer: z.number().optional(),
	clearvalueg: z.number().optional(),
	clearvalueb: z.number().optional(),
	clearvaluea: z.number().optional(),
	inputmapping: z.string().optional(),
	nval: z.number().optional(),
	inputextenduv: z.string().optional(),
	inputextendw: z.string().optional(),
	numcolorbufs: z.number().optional(),
	tops: z.any().optional(),
	vec: z.number().optional(),
	vec0name: z.string().optional(),
	vec0valuex: z.number().optional(),
	vec0valuey: z.number().optional(),
	vec0valuez: z.number().optional(),
	vec0valuew: z.number().optional(),
	array: z.number().optional(),
	array0name: z.string().optional(),
	array0type: z.string().optional(),
	array0chop: z.any().optional(),
	array0arraytype: z.string().optional(),
	matrix: z.number().optional(),
	matrix0name: z.string().optional(),
	matrix0value: z.any().optional(),
	ac: z.number().optional(),
	ac0name: z.string().optional(),
	ac0initvalue: z.string().optional(),
	ac0singlevalue: z.number().optional(),
	ac0chopvalue: z.any().optional(),
	const: z.number().optional(),
	const0name: z.string().optional(),
	const0value: z.number().optional(),
});

export { glslmulti };
