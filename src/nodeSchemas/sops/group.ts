import { z } from "zod";
import { createSOPSchema } from "./utils.js";

const group = createSOPSchema({
	crname: z.string().optional().describe("Group Name"),
	entity: z.string().optional().describe("Entity"),
	geotype: z.string().optional().describe("Geometry Type"),
	usenumber: z.boolean().optional().describe("Use Number"),
	ordered: z.boolean().optional().describe("Ordered"),
	groupop: z.string().optional().describe("Group Operation"),
	pattern: z.string().optional().describe("Pattern"),
	transfer: z.boolean().optional().describe("Transfer"),
	rangestart: z.number().optional().describe("Range Start"),
	rangeend: z.union([z.string(), z.number()]).optional().describe("Range End"),
	select1: z.number().optional().describe("Select 1"),
	select2: z.number().optional().describe("Select 2"),
	filter: z.number().optional().describe("Filter"),
	usebounds: z.boolean().optional().describe("Use Bounds"),
	boundtype: z.string().optional().describe("Bound Type"),
	sizex: z.number().optional().describe("Size X"),
	sizey: z.number().optional().describe("Size Y"),
	sizez: z.number().optional().describe("Size Z"),
	usenormal: z.boolean().optional().describe("Use Normal"),
	dirx: z.number().optional().describe("Direction X"),
	diry: z.number().optional().describe("Direction Y"),
	dirz: z.number().optional().describe("Direction Z"),
	angle: z.number().optional().describe("Angle"),
	camera: z.union([z.string(), z.null()]).optional().describe("Camera"),
	useedges: z.boolean().optional().describe("Use Edges"),
	doangle: z.boolean().optional().describe("Do Angle"),
	edgeangle: z.number().optional().describe("Edge Angle"),
	dodepth: z.boolean().optional().describe("Do Depth"),
	edgestep: z.number().optional().describe("Edge Step"),
	point: z.number().optional().describe("Point"),
	unshared: z.boolean().optional().describe("Unshared"),
	boundarygroups: z.boolean().optional().describe("Boundary Groups"),
	grpequal: z.string().optional().describe("Group Equal"),
	not1: z.boolean().optional().describe("Not 1"),
	grp1: z.string().optional().describe("Group 1"),
	op1: z.string().optional().describe("Operation 1"),
	not2: z.boolean().optional().describe("Not 2"),
	grp2: z.string().optional().describe("Group 2"),
	op2: z.string().optional().describe("Operation 2"),
	not3: z.boolean().optional().describe("Not 3"),
	grp3: z.string().optional().describe("Group 3"),
	op3: z.string().optional().describe("Operation 3"),
	not4: z.boolean().optional().describe("Not 4"),
	grp4: z.string().optional().describe("Group 4"),
	cnvtype: z.string().optional().describe("Convert Type"),
	convertg: z.string().optional().describe("Convert Group"),
	cnvtname: z.string().optional().describe("Convert Name"),
	preserve: z.boolean().optional().describe("Preserve"),
	oldname: z.string().optional().describe("Old Name"),
	newname: z.string().optional().describe("New Name"),
	destroyname: z.string().optional().describe("Destroy Name"),
});

export { group };
