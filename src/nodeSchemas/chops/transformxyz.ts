import { z } from "zod";
import { createCHOPSchema } from "./utils.js";

export const transformxyz = createCHOPSchema({
	input0type: z.string().optional().describe("Input Type"),
	innormalize: z.boolean().optional().describe("Input Normalize"),
	input1custorder: z.boolean().optional().describe("Input Custom Order"),
	inxord: z.string().optional().describe("Input Transform Order"),
	inrord: z.string().optional().describe("Input Rotation Order"),
	input1preop: z.string().optional().describe("Input Pre-op"),
	xord: z.string().optional().describe("Transform Order"),
	rord: z.string().optional().describe("Rotation Order"),
	tx: z.number().optional().describe("Translate X"),
	ty: z.number().optional().describe("Translate Y"),
	tz: z.number().optional().describe("Translate Z"),
	rx: z.number().optional().describe("Rotate X"),
	ry: z.number().optional().describe("Rotate Y"),
	rz: z.number().optional().describe("Rotate Z"),
	sx: z.number().optional().describe("Scale X"),
	sy: z.number().optional().describe("Scale Y"),
	sz: z.number().optional().describe("Scale Z"),
	px: z.number().optional().describe("Pivot X"),
	py: z.number().optional().describe("Pivot Y"),
	pz: z.number().optional().describe("Pivot Z"),
	invert: z.boolean().optional().describe("Invert"),
	lookat: z.string().nullable().optional().describe("Look At"),
	upvectorx: z.number().optional().describe("Up Vector X"),
	upvectory: z.number().optional().describe("Up Vector Y"),
	upvectorz: z.number().optional().describe("Up Vector Z"),
	forwarddir: z.string().optional().describe("Forward Direction"),
	multiplyorder: z.string().optional().describe("Multiply Order"),
	unmatchedchans: z.string().optional().describe("Unmatched Channels"),
	normalize: z.boolean().optional().describe("Normalize"),
});
