import { z } from "zod";
import { createCHOPSchema } from "./utils.js";

export const pattern = createCHOPSchema({
	wavetype: z.string().optional().describe("Wave Type"),
	length: z.number().optional().describe("Length"),
	numcycles: z.number().optional().describe("Number of Cycles"),
	steppercycle: z.number().optional().describe("Steps per Cycle"),
	numsteps: z.number().optional().describe("Number of Steps"),
	bias: z.number().optional().describe("Bias"),
	seed: z.number().optional().describe("Seed"),
	phase: z.number().optional().describe("Phase"),
	phasestep: z.number().optional().describe("Phase Step"),
	taper1: z.number().optional().describe("Taper 1"),
	taper2: z.number().optional().describe("Taper 2"),
	taperdecay: z.number().optional().describe("Taper Decay"),
	amp: z.number().optional().describe("Amplitude"),
	offset: z.number().optional().describe("Offset"),
	fromrange1: z.number().optional().describe("From Range 1"),
	fromrange2: z.number().optional().describe("From Range 2"),
	torange1: z.number().optional().describe("To Range 1"),
	torange2: z.number().optional().describe("To Range 2"),
	integer: z.string().optional().describe("Integer"),
	reverse: z.boolean().optional().describe("Reverse"),
	randomize: z.boolean().optional().describe("Randomize"),
	channelname: z.string().optional().describe("Channel Name"),
	combine: z.string().optional().describe("Combine"),
	rate: z.number().optional().describe("Rate"),
	left: z.string().optional().describe("Left Boundary"),
	right: z.string().optional().describe("Right Boundary"),
	defval: z.number().optional().describe("Default Value"),
});
