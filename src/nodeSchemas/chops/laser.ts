import { z } from "zod";
import { createCHOPSchema } from "./utils.js";

export const laser = createCHOPSchema({
	active: z.boolean().optional().describe("Active"),
	source: z.string().optional().describe("Source"),
	sop: z.any().nullable().optional().describe("SOP"),
	chop: z.any().nullable().optional().describe("CHOP"),
	inputrate: z.number().optional().describe("Input Rate"),
	outputrate: z.number().optional().describe("Output Rate"),
	swap: z.boolean().optional().describe("Swap"),
	xscale: z.number().optional().describe("X Scale"),
	yscale: z.number().optional().describe("Y Scale"),
	rotate: z.number().optional().describe("Rotate"),
	updatemethod: z.string().optional().describe("Update Method"),
	startpulse: z.boolean().optional().describe("Start Pulse"),
	debugchan: z.boolean().optional().describe("Debug Channel"),
	vertexorder: z.boolean().optional().describe("Vertex Order"),
	stepsize: z.number().optional().describe("Step Size"),
	bstepsize: z.number().optional().describe("B Step Size"),
	minverthold: z.number().optional().describe("Min Vert Hold"),
	maxverthold: z.number().optional().describe("Max Vert Hold"),
	vertholdchop: z.any().nullable().optional().describe("Vert Hold CHOP"),
	camera: z.any().nullable().optional().describe("Camera"),
	redscale: z.number().optional().describe("Red Scale"),
	greenscale: z.number().optional().describe("Green Scale"),
	bluescale: z.number().optional().describe("Blue Scale"),
	preblankon: z.number().optional().describe("Pre Blank On"),
	postblankon: z.number().optional().describe("Post Blank On"),
	preblankoff: z.number().optional().describe("Pre Blank Off"),
	postblankoff: z.number().optional().describe("Post Blank Off"),
	starthold: z.number().optional().describe("Start Hold"),
	colordelay: z.number().optional().describe("Color Delay"),
});
