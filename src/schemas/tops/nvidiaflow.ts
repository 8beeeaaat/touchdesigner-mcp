import { z } from "zod";
import { createTOPSchema } from "./index.js";

const nvidiaflow = createTOPSchema({
	pageindex: z.number().optional(),
	initialize: z.boolean().optional(),
	start: z.boolean().optional(),
	play: z.boolean().optional(),
	camera: z.any().optional(),
	emitters: z.any().optional(),
	simpositionx: z.number().optional(),
	simpositiony: z.number().optional(),
	simpositionz: z.number().optional(),
	simsizex: z.number().optional(),
	simsizey: z.number().optional(),
	simsizez: z.number().optional(),
	memusage: z.number().optional(),
	showblocks: z.boolean().optional(),
	showemitbounds: z.boolean().optional(),
	showshapes: z.boolean().optional(),
	speed: z.number().optional(),
	maxsteps: z.number().optional(),
	rendermode: z.string().optional(),
	gravityx: z.number().optional(),
	gravityy: z.number().optional(),
	gravityz: z.number().optional(),
	veldamping: z.number().optional(),
	velfade: z.number().optional(),
	velmaccormackblend: z.number().optional(),
	smokedamping: z.number().optional(),
	smokefade: z.number().optional(),
	smokemaccormackblend: z.number().optional(),
	tempdamping: z.number().optional(),
	tempfade: z.number().optional(),
	fueldamping: z.number().optional(),
	fuelfade: z.number().optional(),
	vortstrength: z.number().optional(),
	vortfromvel: z.number().optional(),
	vortfromsmoke: z.number().optional(),
	vortfromtemp: z.number().optional(),
	vortfromfuel: z.number().optional(),
	vortconstant: z.number().optional(),
	ignitiontemp: z.number().optional(),
	burnpertemp: z.number().optional(),
	smokeperburn: z.number().optional(),
	tempperburn: z.number().optional(),
	fuelperburn: z.number().optional(),
	buoyancy: z.number().optional(),
	coolingrate: z.number().optional(),
	expansion: z.number().optional(),
	velallocweight: z.number().optional(),
	velallocthreshold: z.number().optional(),
	smokeallocweight: z.number().optional(),
	smokeallocthreshold: z.number().optional(),
	fuelallocweight: z.number().optional(),
	fuelallocthreshold: z.number().optional(),
	enableshadow: z.boolean().optional(),
	drawshadowdebug: z.boolean().optional(),
	overrideemitter: z.boolean().optional(),
	light: z.any().optional(),
	shadowresolution: z.number().optional(),
	shadowminusage: z.number().optional(),
	shadowmaxusage: z.number().optional(),
	shadowintensityscale: z.number().optional(),
	shadowminintensity: z.number().optional(),
	shadowburnmask: z.number().optional(),
	shadowsmokemask: z.number().optional(),
	shadowtempmask: z.number().optional(),
	shadowfuelmask: z.number().optional(),
	shadowblendbias: z.number().optional(),
	outputresolution: z.string().optional(),
	resolutionw: z.union([z.number(), z.string()]).optional(),
	resolutionh: z.union([z.number(), z.string()]).optional(),
	resmult: z.boolean().optional(),
	outputaspect: z.string().optional(),
	aspect1: z.number().optional(),
	aspect2: z.number().optional(),
	inputfiltertype: z.string().optional(),
	fillmode: z.string().optional(),
	filtertype: z.string().optional(),
	npasses: z.number().optional(),
	chanmask: z.string().optional(),
	format: z.string().optional(),
});

export { nvidiaflow };
