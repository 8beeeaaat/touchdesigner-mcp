# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Release CI

permissions:
  contents: write

on:
  push:
    branches: ["main"]
    tags:
      - "v*"  # v で始まるタグにも対応

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      is_prerelease: ${{ steps.prerelease.outputs.is_prerelease }}

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          submodules: recursive
      - name: Set up Docker environment
        run: |
          echo "TD_WEB_SERVER_HOST=http://localhost" >> $GITHUB_ENV
          echo "TD_WEB_SERVER_PORT=9981" >> $GITHUB_ENV
      - name: Docker Compose Action
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: "./docker-compose.yml"
          down-flags: "--volumes"
          services: |
            touchdesigner-mcp-server
      - name: Extract build artifacts and create package
        run: |
          # Create a temporary container to extract build artifacts
          docker create --name temp-mcp touchdesigner-mcp-server
          docker cp temp-mcp:/app/td/modules td/
          docker cp temp-mcp:/app/dist ./
          docker rm temp-mcp

          # Create selective td directory package
          echo "Creating selective td directory package..."
          mkdir -p temp_td
          cp td/import_modules.py temp_td/
          cp td/mcp_webserver_base.tox temp_td/
          cp -r td/modules temp_td/
          cd temp_td && zip -r ../touchdesigner-mcp-td.zip .
          rm -rf temp_td
          echo "Build artifacts extracted and package created!"
      - name: nodejs project information
        id: projectinfo
        uses: gregoranders/nodejs-project-info@master
      - name: Determine if prerelease
        id: prerelease
        run: |
          VERSION="${{ steps.projectinfo.outputs.version }}"
          if [[ "$VERSION" == *"-"* ]] || [[ "$VERSION" == *"beta"* ]] || [[ "$VERSION" == *"alpha"* ]] || [[ "$VERSION" == *"rc"* ]] || [[ "$VERSION" == *"test"* ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
            echo "::notice::Detected prerelease version: $VERSION"
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
            echo "::notice::Detected production version: $VERSION"
          fi
      - run: |
          echo "v${{ steps.projectinfo.outputs.version }}" > TAG_NAME
          git tag $(cat TAG_NAME)
          git push origin $(cat TAG_NAME)
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.projectinfo.outputs.version }}
          name: ${{ steps.projectinfo.outputs.name }} - ${{ steps.projectinfo.outputs.version }} Release
          body: |
            ## Downloads
            - **TouchDesigner Components (Complete)**: [touchdesigner-mcp-td.zip](https://github.com/${{ github.repository }}/releases/download/v${{ steps.projectinfo.outputs.version }}/touchdesigner-mcp-td.zip)
            - **npm package**: `npx -y touchdesigner-mcp-server@prerelease --stdio`

            ## Usage

            ### Quick Start with npx
            1. Download and extract the TouchDesigner components from `touchdesigner-mcp-td.zip`
            2. Import `mcp_webserver_base.tox` into your TouchDesigner project
            3. Run the MCP server:
            ```bash
            npx -y touchdesigner-mcp-server@prerelease --stdio
            ```

            ### Claude Desktop Configuration
            ```json
            {
              "mcpServers": {
                "touchdesigner": {
                  "command": "npx",
                  "args": ["-y", "touchdesigner-mcp-server@prerelease", "--stdio"]
                }
              }
            }
            ```

            ## Changes
            See the full changelog at https://github.com/${{ github.repository }}/releases
          files: |
            touchdesigner-mcp-td.zip
          draft: false
          prerelease: ${{ steps.prerelease.outputs.is_prerelease == 'true' }}

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: actions/setup-node@v4.0.0
        with:
          node-version: "24.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm run build
      - name: Publish to npm
        run: |
          if [[ "${{ needs.build.outputs.is_prerelease }}" == "true" ]]; then
            echo "Publishing prerelease version with prerelease tag..."
            npm publish --access public --tag prerelease
          else
            echo "Publishing production version with latest tag..."
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
